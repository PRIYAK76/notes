//css cascading style sheets
external style sheet are stored in .css files

//syntax
selector, declaration has property and value

//example 1.1
p{
    color:red;
    text-align: center;
}
here color is the property and red is the property value

//univrsal selector(*)
this will affect allHTML element
in the above example 1.1 * is used instead of p

//grouping selector
h1,h2,p{
    color: red;
}


//for id element 
#para{
    color: red;
}

//for class element
<h1 class="one-class">The header</h1>
<p class="one-class">The paragraph</p>
.one-class{
    color: red;
}

// three ways to insert css files
*external*internal
*inline


//example of internal 
defined within style element
body{
    color:blue;
}

//example of inline css
inline styles are defined within style attribute of the same element
<p style="color:blue;text-align:center;"></p>
it become hard to see whiich style is added to which element

//example of EXTERNAL
<head>
<link rel="stylesheet" href="mystyle.css">
mystyle.css is the name of the css file to be added to html file

//combinators
a feature to combine two selectors in a dependent way
adjacent sibling +
h2+p{
    color:red;
    the p tag following h2 only will get red color 
}
general sibling tilde
the p tag following h2 either direct or indirect get red color
child >
child combinator will do except for the nested element
descendant 


//specificity 
it is about resolving conflicts that arise from css rules which target the same element


//transitions and animations
for tarnsition the element button is used here
<button class ="btn">SUBMIT</button>

.btn will stylethe button and then
.btn:hover{
    transform: translateY(-10px);
}
transition: transform 0.3s ease 0s;


//animations 
animations can be given to any heading or paragraphs
@keyframes Slide {
    from{
        transform: translateX(-300px);
    }
    to{
        transform: translateX(0);
    }
}
the class name of heading or paragaraph or anything can be given
.heading{
 animation: name duration timing-function delay iteration-count direction fill-mode;
 timing function: ease-in,ease-out,ease-in-out and linear
 animation direction: reverse ,forward ,normal, both
 animation fill mode: forward (doesnot push the heading ),backward (will push the heading),
 both(starts from and ends at to)
 none (nothing happens)
}

//width
will prevent fro stretching to the edge of the container
element takes up specified width


//max-width
browser adds horizontal scroll bar to the page 
this will improve the handling in small windows  or small devices

//z-index
when the elemets are positioned,they can also overlap other elemets
z-index property will specify the stack order of the elemets to be displayed on the screen
it can also be postitive and negative

//overflow
 this property is used when the content is big and not fixed into screen area
visible --> not clipped the content renders beyond the element box
hidden --> clipped overflow rest of the content hidden
scroll --> x and y scrollbars are added to see the content
auto --> only neccessary scrollbars are added

//optacity
this property specifies the transparancy of the image or element
it takes value from 0.0 to -1.0
transparancy can be set to hovered image
