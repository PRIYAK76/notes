                  CSS BASIC

//css cascading style sheets
external style sheet are stored in .css files

//syntax
selector, declaration has property and value

//example 1.1
p{
    color:red;
    text-align: center;
}
here color is the property and red is the property value

//univrsal selector(*)
this will affect allHTML element
in the above example 1.1 * is used instead of p

//grouping selector
h1,h2,p{
    color: red;
}


//for id element 
#para{
    color: red;
}

//for class element
<h1 class="one-class">The header</h1>
<p class="one-class">The paragraph</p>
.one-class{
    color: red;
}

// three ways to insert css files
*external*internal
*inline


//example of internal 
defined within style element
body{
    color:blue;
}

//example of inline css
inline styles are defined within style attribute of the same element
<p style="color:blue;text-align:center;"></p>
it become hard to see whiich style is added to which element

//example of EXTERNAL
<head>
<link rel="stylesheet" href="mystyle.css">
mystyle.css is the name of the css file to be added to html file

//combinators
a feature to combine two selectors in a dependent way
adjacent sibling +
h2+p{
    color:red;
    the p tag following h2 only will get red color 
}
general sibling ~
the p tag following h2 either direct or indirect get red color
child >
child combinator will do except for the nested element
descendant 


//specificity 
it is about resolving conflicts that arise from css rules which target the same element


//transitions and animations
for transition the element button is used here
<button class ="btn">SUBMIT</button>

.btn will style the button and then
.btn:hover{
    transform: translateY(-10px);
}
transition: transform 0.3s ease 0s;


//animations 
animations can be given to any heading or paragraphs
@keyframes Slide {
    from{
        transform: translateX(-300px);
    }
    to{
        transform: translateX(0);
    }
}

the class name of heading or paragaraph or anything can be given
.heading{
 animation: name duration timing-function delay iteration-count direction fill-mode;
 timing function: ease-in,ease-out,ease-in-out and linear
 animation direction: reverse ,forward ,normal, both
 animation fill mode: forward (doesnot push the heading ),backward (will push the heading),
 both(starts from and ends at to)
 none (nothing happens)
}

//width
will prevent from stretching to the edge of the container
element takes up specified width

//max-width
browser adds horizontal scroll bar to the page 
this will improve the handling in small windows  or small devices

//z-index
when the elemets are positioned,they can also overlap other elemets
z-index property will specify the stack order of the elemets to be displayed on the screen
it can also be postitive and negative

//overflow
 this property is used when the content is big and not fixed into screen area

visible --> not clipped the content renders beyond the element box
hidden --> clipped overflow rest of the content hidden
scroll --> x and y scrollbars are added to see the content
auto --> only neccessary scrollbars are added

//optacity
this property specifies the transparancy of the image or element
it takes value from 0.0 to -1.0
transparancy can be set to hovered image

//image sprites
collection of images put into a single image
saves bandwidth


//attribute selector
[attribute="value"]
[attribute~="value"]
[attribute|="value"]   - values
[attribute^="value"]  to select element that starts with value
[attribute$="value"]  to select element that ends with value
[attribute*="value"]

//forms
<form>
<label> name</label>
<input type="text">
</form>


//UNITS
css has different units for expressing length
absolute length
cm 
mm
in
px*

relative length
em 

//specificity
if two or more rules point to same element then the one with highest priority wins by 
highest specificity 
specificity

1.Inline style --> <h1 style="pink";>
2. ID --> #id
3.class,pseudo class,attribute selectors --> .test,:hover,[href]
4. element h1,p

specificity value

p --> 1
.test --> 10
#id --> 100
<p style=color:pink ;> --> 1000
* (universal selector ) --> 0

//!important
add more importance to a property / value
it will override all previous styling of that element

//calc function used to perform calcluation for the property value

calc()
min()
max()

#div{
    width: min(50%,300px);
    width: max(50%,300px);
    width: calc(50%+300px); +-*/ can be used here
}

//position
static:
elements are static by default;
not affected by top,right,left,bottom properties;

relative:
relative to normal position
top,right,left,bottom will be affected by setting 

fixed:
will always stays in the same place even if the page gets scrolled 

absolute:
absolute positions can overlap elements removed from normal flow

//pseudo class
a keyword added to a selector that specifies a special state 
of the selected elements

li:nth-child(1){
    background-color: yellow;
}

----------------------------------------------------------------------------------------


                      CSS ADVANCED

//rounded corners
#rcorners2 {
  border-radius: 25px;
  border: 2px solid #73AD21;
  padding: 20px; 
  width: 200px;
  height: 150px;  
}
border radius will define the round radius of the element



//border images
 property-name: border-image
 set image to be used as a border around an element
 note: we can also download element and give as a border 
 border-image: url(border.png) 30 stretch;
 border-image: url(border.png) 30 round;
 both stretch and round will create different impressions around element


 //multiple backgrounds setting
property-name:background-image
background-image: url(img_flwr.gif), url(paper.gif);

using shorthand-property
background : url(image.gif) center repeat, url(img.gif) bottom no repeat;

background-clip:padding-box;
or content-box;

//colors
css supports 140+color names,HEX values,RGB values,RGBA value,HSLand HSLA and opacity

RGBA (red,blue,green,alpha) alpha for transparent and opaque 0-1
HSL (hue,saturation 100%, lightness 100%)
hue --> 0or 360 red(color wheeel)
120 green
240 blue

//transparent keyword
background-color:transparent

//gradient
is used to set between two or more colors
-->linear (up/down/right/diagonally)
-->radial (at center)
-->conic(rotated at center)
background-image:linear-gradient(red-yellow)
syntax--> background-image: linear-gradient(direction,color1,color2,....)

radial
--> background-image: radial-gradient(size shape position,start color,....,end-color)

//SHADOWS
text shadow
box shadow

text-shadow: hor ver blur color;
2px 2px 5px red;
multiple shadows by giving comma

box-shadow: 10px 10px 5px 12px lightblue;


//2D transforms
*translate()
rotate()  --->degree
scaleX()
scaleY()
scale()
skewX()
skewY()
skew()
matrix() --> scaleX(),skewX(),scaleY(),skewY(),translateX(),translateY()
matrix method has six parameters

//3D transforms
rotateX()
rotateY()
rotateZ()


//transition
transition
transition-delay
transition-duration
transition-property
transition-timing-function --> ease,ease-in,ease-out,ease-in-out,linear

//tooltip 
it is used to display extra info when user moves over the element
topleft right bottom
can be displayed with arrow or without arrow

//image filters
grayscale(100%);

//image reflection
The box-reflect property is used to create an image reflection.
values: below,left,right,above

img {
  -webkit-box-reflect: right 20px;
}

px describes the gap b/w the image and reflection

//object-fit
object-fit: cover
scale-down
fill
container

//css masking
